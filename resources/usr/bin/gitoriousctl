#!/bin/bash

is-running() {
  docker ps | grep -e "gitorious-$1[^/]" &>/dev/null
}

start-container() {
  echo -n "$1: "

  if is-running $1; then
    echo "already running"
  else
    if docker start gitorious-$1 &>/dev/null; then
      echo -e "\e[32mstarted\e[0m"
    else
      echo -e "\e[31mstart failed\e[0m (to get more details run: docker start gitorious-$1)"
    fi
  fi
}

stop-container() {
  echo -n "$1: "

  if is-running $1; then
    docker stop gitorious-$1 &>/dev/null && echo -e "\e[32mstopped\e[0m" || echo -e "\e[31mstop failed\e[0m"
  else
    echo "already stopped"
  fi
}

restart-container() {
  echo -n "$1: "

  if is-running $1; then
    if docker restart gitorious-$1 &>/dev/null; then
      echo -e "\e[32mrestarted\e[0m"
    else
      echo -e "\e[31mrestart failed\e[0m (to get more details run: docker restart gitorious-$1)"
    fi
  else
    echo "not running, ignoring"
  fi
}

status() {
  echo -n "$1: "

  if is-running $1; then
    echo -e "\e[32mrunning\e[0m"
  else
    echo -e "\e[31mnot running\e[0m"
  fi
}

# Starting

start-mysql() {
  start-container mysql
}

start-redis() {
  start-container redis
}

start-memcached() {
  start-container memcached
}

start-git-daemon() {
  start-container git-daemon
}

start-postfix() {
  start-container postfix
}

start-git-proxy() {
  start-git-daemon
  start-mysql

  start-container git-proxy
}

start-queue() {
  start-mysql
  start-redis
  start-memcached
  start-postfix

  start-container queue
}

start-sphinx() {
  start-mysql

  start-container sphinx
}

start-web() {
  start-mysql
  start-redis
  start-memcached
  start-sphinx
  start-postfix

  start-container web
}

start-sshd() {
  start-web
  start-redis

  start-container sshd
}

start-nginx() {
  start-web

  start-container nginx
}

# Stopping

stop-nginx() {
  stop-container nginx
}

stop-sshd() {
  stop-container sshd
}

stop-web() {
  stop-nginx
  stop-sshd

  stop-container web
}

stop-sphinx() {
  stop-web

  stop-container sphinx
}

stop-queue() {
  stop-container queue
}

stop-postfix() {
  stop-queue
  stop-web

  stop-container postfix
}

stop-git-proxy() {
  stop-container git-proxy
}

stop-git-daemon() {
  stop-git-proxy

  stop-container git-daemon
}

stop-memcached() {
  stop-queue
  stop-web

  stop-container memcached
}

stop-redis() {
  stop-queue
  stop-web
  stop-sshd

  stop-container redis
}

stop-mysql() {
  stop-git-proxy
  stop-queue
  stop-sphinx
  stop-web

  stop-container mysql
}

case "$1" in
  start)
    if [[ -n $2 ]]; then
      start-$2
    else
      start-container mysql
      start-container redis
      start-container memcached
      start-container git-daemon
      start-container git-proxy
      start-container postfix
      start-container queue
      start-container sphinx
      start-container web
      start-container sshd
      start-container nginx
    fi
    ;;

  stop)
    if [[ -n $2 ]]; then
      stop-$2
    else
      stop-container nginx
      stop-container sshd
      stop-container web
      stop-container sphinx
      stop-container queue
      stop-container postfix
      stop-container git-proxy
      stop-container git-daemon
      stop-container memcached
      stop-container redis
      stop-container mysql
    fi
    ;;

  restart)
    if [[ -n $2 ]]; then
      stop-$2
      start-$2
    else
      restart-container nginx
      restart-container sshd
      restart-container web
      restart-container sphinx
      restart-container queue
      restart-container postfix
      restart-container git-proxy
      restart-container git-daemon
      restart-container memcached
      restart-container redis
      restart-container mysql
    fi
    ;;

  status)
    if [[ -n $2 ]]; then
      status $2
    else
      status mysql
      status redis
      status memcached
      status git-daemon
      status git-proxy
      status postfix
      status queue
      status sphinx
      status web
      status sshd
      status nginx
    fi
    ;;

  run)
    shift
    docker run --rm -t -i --link gitorious-mysql:mysql --link gitorious-redis:redis --link gitorious-memcached:memcached --link gitorious-sphinx:sphinx --link gitorious-postfix:smtp --volumes-from gitorious-data -v /var/log/gitorious/app:/srv/gitorious/app/log --env-file=/var/lib/gitorious/env/mysql gitorious/app "$@"
    ;;

  rake)
    shift
    $0 run bin/rake "$@"
    ;;

  console)
    shift
    $0 run bin/console "$@"
    ;;

  *)
    cat <<EOF
usage: $0 <command> [args...]

where command is one of:

  start [service] - start all services or a specified service
  stop [service] - stop all services or a specified service
  restart [service] - restart all services or a specified service
  status [service] - print status of all services or a specified service
  run <command> [args...] - run the command in application environment
  rake <task> [args...] - run the rake task
  console - run Rails console
EOF
    ;;
esac

exit 0

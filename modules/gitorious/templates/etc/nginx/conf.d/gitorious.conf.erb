# This file is generated by Puppet. Edits will be lost.
upstream appserver {
  server unix://<%= nginx_gitorious_root %>/tmp/pids/unicorn.sock fail_timeout=0;
}

# We run a local server for handling local polling requests.
server {
  listen 80;
  server_name <%= name %> localhost;
  root <%= nginx_gitorious_root %>/current/public;

  try_files $uri/index.html $uri.html $uri @app;
  if (-f $document_root/system/maintenance.html) {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }

  # Non-local requests are redirected to SSL
  # Local requests are handled here, queries for permissions etc.
  if ($http_host = <%= name %>) {
    rewrite (.*) https://<%= name %>$1;
  }

  location @app {
    proxy_set_header Host $http_host;
    proxy_set_header Protocol ssl;
    proxy_redirect off;
    proxy_pass http://appserver;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
  }
}

server {
  listen 443;

  server_name <%= name %>;
  ssl on;
  ssl_certificate      <%= certificate_file %>;
  ssl_certificate_key  <%= certificate_key_file %>;

  ssl_session_timeout  5m;
  ssl_protocols  SSLv2 SSLv3 TLSv1;
  ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
  ssl_prefer_server_ciphers   on;

  root <%= nginx_gitorious_root %>/current/public;
  try_files $uri/index.html $uri.html $uri @app;
  if (-f $document_root/system/maintenance.html) {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }
  location @app {
    proxy_set_header Host $http_host;
    proxy_set_header Protocol ssl;
    proxy_redirect off;
    proxy_pass http://appserver;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
  }
  # Example:X-Accel-Redirect: /tarballs/filename.tar.gz
  # Will deliver /srv/gitorious/tarballs-cache/filename.tar.gz
  location /tarballs/ {
    internal;
    alias <%= nginx_tarballs_root %>/;
  }

  location /git-http/ {
    internal;
    alias <%= nginx_repo_root %>/;
  }
}
